---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    service.alpha.openshift.io/serving-cert-secret-name: metrics-daemon-secret
    service.alpha.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1683030520
    service.beta.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1683030520
  creationTimestamp: "2023-05-02T12:26:05Z"
  labels:
    service: network-metrics-service
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:prometheus.io/scrape: {}
          f:service.alpha.openshift.io/serving-cert-secret-name: {}
        f:labels:
          f:service: {}
        f:ownerReferences:
          k:{"uid":"a74973fc-c074-41e2-8215-81c3454addea"}: {}
      f:spec:
        f:clusterIP: {}
        f:ports:
          k:{"port":8443,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:targetPort: {}
        f:selector: {}
        f:type: {}
    manager: cluster-network-operator/operconfig
    operation: Apply
    time: "2023-05-02T12:26:05Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:service.alpha.openshift.io/serving-cert-signed-by: {}
          f:service.beta.openshift.io/serving-cert-signed-by: {}
    manager: service-ca-operator
    operation: Update
    time: "2023-05-02T12:30:01Z"
  name: network-metrics-service
  namespace: openshift-multus
  ownerReferences:
  - apiVersion: operator.openshift.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Network
    name: cluster
    uid: a74973fc-c074-41e2-8215-81c3454addea
  resourceVersion: "5387"
  uid: 54d426ee-f739-4dad-9945-7fa10ff2313f
spec:
  clusterIP: None
  clusterIPs:
  - None
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: metrics
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app: network-metrics-daemon
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
