---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemon set launches the Multus networking component on each node.
      release.openshift.io/version: 4.12.2
    creationTimestamp: "2023-05-02T12:26:03Z"
    generation: 1
    labels:
      networkoperator.openshift.io/generates-operator-status: stand-alone
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:kubernetes.io/description: {}
            f:release.openshift.io/version: {}
          f:labels:
            f:networkoperator.openshift.io/generates-operator-status: {}
          f:ownerReferences:
            k:{"uid":"a74973fc-c074-41e2-8215-81c3454addea"}: {}
        f:spec:
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                f:target.workload.openshift.io/management: {}
              f:labels:
                f:app: {}
                f:component: {}
                f:openshift.io/component: {}
                f:type: {}
            f:spec:
              f:containers:
                k:{"name":"kube-multus"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:privileged: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/cni/net.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/var/run/multus/cni/net.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                k:{"name":"cni-binary-copy"}:
                  .: {}
                  f:configMap:
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"cnibin"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"multus-cni-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"os-release"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"system-cni-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              f:maxUnavailable: {}
            f:type: {}
      manager: cluster-network-operator/operconfig
      operation: Apply
      time: "2023-05-02T12:26:03Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-05-02T12:26:16Z"
    name: multus
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: a74973fc-c074-41e2-8215-81c3454addea
    resourceVersion: "2902"
    uid: 93294c81-81da-4389-8e65-6a247134c2ba
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: multus
    template:
      metadata:
        annotations:
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: multus
          component: network
          openshift.io/component: network
          type: infra
      spec:
        containers:
        - args:
          - |
            /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
          command:
          - /bin/bash
          - -ec
          - --
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /usr/src/multus-cni/rhel7/bin/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /usr/src/multus-cni/rhel8/bin/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /usr/src/multus-cni/bin/
          - name: KUBERNETES_SERVICE_PORT
            value: "6443"
          - name: KUBERNETES_SERVICE_HOST
            value: api-int.sno.gw.lo
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
          imagePullPolicy: IfNotPresent
          name: kube-multus
          resources:
            requests:
              cpu: 10m
              memory: 65Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/etc/os-release
            name: os-release
          - mountPath: /host/etc/cni/net.d
            name: system-cni-dir
          - mountPath: /host/var/run/multus/cni/net.d
            name: multus-cni-dir
          - mountPath: /host/opt/cni/bin
            name: cnibin
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: multus
        serviceAccountName: multus
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/cni/net.d
            type: Directory
          name: system-cni-dir
        - hostPath:
            path: /var/run/multus/cni/net.d
            type: Directory
          name: multus-cni-dir
        - hostPath:
            path: /var/lib/cni/bin
            type: Directory
          name: cnibin
        - hostPath:
            path: /etc/os-release
            type: File
          name: os-release
        - configMap:
            defaultMode: 484
            name: cni-copy-resources
          name: cni-binary-copy
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemon installs and configures auxiliary CNI plugins on each node.
      release.openshift.io/version: 4.12.2
    creationTimestamp: "2023-05-02T12:26:04Z"
    generation: 1
    labels:
      networkoperator.openshift.io/generates-operator-status: stand-alone
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:kubernetes.io/description: {}
            f:release.openshift.io/version: {}
          f:labels:
            f:networkoperator.openshift.io/generates-operator-status: {}
          f:ownerReferences:
            k:{"uid":"a74973fc-c074-41e2-8215-81c3454addea"}: {}
        f:spec:
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                f:target.workload.openshift.io/management: {}
              f:labels:
                f:app: {}
                f:component: {}
                f:openshift.io/component: {}
                f:type: {}
            f:spec:
              f:containers:
                k:{"name":"kube-multus-additional-cni-plugins"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    f:privileged: {}
              f:hostNetwork: {}
              f:initContainers:
                k:{"name":"bond-cni-plugin"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"cni-plugins"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/cni/tuning/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/sysctls"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"egress-router-binary-copy"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"routeoverride-cni"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"whereabouts-cni"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"CNI_BIN_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"CNI_CONF_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"SLEEP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WHEREABOUTS_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:volumeMounts:
                    k:{"mountPath":"/host/etc/cni/net.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"whereabouts-cni-bincopy"}:
                  .: {}
                  f:command: {}
                  f:env:
                    k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL7_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:volumeMounts:
                    k:{"mountPath":"/entrypoint"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/etc/os-release"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/host/opt/cni/bin"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                k:{"name":"cni-binary-copy"}:
                  .: {}
                  f:configMap:
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"cni-sysctl-allowlist"}:
                  .: {}
                  f:configMap:
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"cnibin"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                  f:name: {}
                k:{"name":"multus-cni-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                  f:name: {}
                k:{"name":"os-release"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"system-cni-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                  f:name: {}
                k:{"name":"tuning-conf-dir"}:
                  .: {}
                  f:hostPath:
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              f:maxUnavailable: {}
            f:type: {}
      manager: cluster-network-operator/operconfig
      operation: Apply
      time: "2023-05-02T12:26:04Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-05-04T16:31:19Z"
    name: multus-additional-cni-plugins
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: a74973fc-c074-41e2-8215-81c3454addea
    resourceVersion: "630159"
    uid: 3cb0d925-5758-49db-be45-bcc082c8e5a7
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: multus-additional-cni-plugins
    template:
      metadata:
        annotations:
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: multus-additional-cni-plugins
          component: network
          openshift.io/component: network
          type: infra
      spec:
        containers:
        - args:
          - |
            trap : TERM INT; sleep infinity & wait
          command:
          - /bin/bash
          - -ec
          - --
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae783ee6a05beafca04f0766933ee1573b70231a6cd8c449a2177afdaf4802a0
          imagePullPolicy: IfNotPresent
          name: kube-multus-additional-cni-plugins
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /entrypoint/cnibincopy.sh
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /usr/src/egress-router-cni/rhel7/bin/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /usr/src/egress-router-cni/rhel8/bin/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /usr/src/egress-router-cni/bin/
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cad5a85f21da1d2e653f41f82db607ab6827da0468283f63694c509e39374f0d
          imagePullPolicy: IfNotPresent
          name: egress-router-binary-copy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/os-release
            name: os-release
            readOnly: true
        - command:
          - /bin/bash
          - -c
          - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /usr/src/plugins/rhel7/bin/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /usr/src/plugins/rhel8/bin/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /usr/src/plugins/bin/
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d03a73b14daa7fe32294f62fd5ef20edf193204d6a39df05dd4342e721e7746d
          imagePullPolicy: IfNotPresent
          name: cni-plugins
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/os-release
            name: os-release
            readOnly: true
          - mountPath: /host/etc/cni/tuning/
            name: tuning-conf-dir
          - mountPath: /sysctls
            name: cni-sysctl-allowlist
        - command:
          - /entrypoint/cnibincopy.sh
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /bondcni/rhel7/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /bondcni/rhel8/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /bondcni/
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9c407846948c8ff2cd441089c6a57822cfe1a07a537dff1f9d7ebf2db2d1cdee
          imagePullPolicy: IfNotPresent
          name: bond-cni-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/os-release
            name: os-release
            readOnly: true
        - command:
          - /entrypoint/cnibincopy.sh
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /usr/src/route-override/rhel7/bin/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /usr/src/whereabouts/rhel8/bin/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /usr/src/route-override/bin/
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:238c03849ea26995bfde9657c7628ae0e31fe35f4be068d7326b65acb1f55d01
          imagePullPolicy: IfNotPresent
          name: routeoverride-cni
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/os-release
            name: os-release
            readOnly: true
        - command:
          - /entrypoint/cnibincopy.sh
          env:
          - name: RHEL7_SOURCE_DIRECTORY
            value: /usr/src/whereabouts/rhel7/bin/
          - name: RHEL8_SOURCE_DIRECTORY
            value: /usr/src/whereabouts/rhel8/bin/
          - name: DEFAULT_SOURCE_DIRECTORY
            value: /usr/src/whereabouts/bin/
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
          imagePullPolicy: IfNotPresent
          name: whereabouts-cni-bincopy
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entrypoint
            name: cni-binary-copy
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/os-release
            name: os-release
            readOnly: true
        - command:
          - /bin/sh
          - -c
          - |
            #!/bin/sh

            set -u -e

            CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
            WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
            CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

            # Make a whereabouts.d directory (for our kubeconfig)

            mkdir -p $CNI_CONF_DIR/whereabouts.d
            WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
            WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

            # ------------------------------- Generate a "kube-config"
            SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
            KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
            SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
            SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


            # Check if we're running as a k8s pod.
            if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
              # We're running as a k8d pod - expect some variables.
              if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
                error "KUBERNETES_SERVICE_HOST not set"; exit 1;
              fi
              if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
                error "KUBERNETES_SERVICE_PORT not set"; exit 1;
              fi

              if [ "$SKIP_TLS_VERIFY" == "true" ]; then
                TLS_CFG="insecure-skip-tls-verify: true"
              elif [ -f "$KUBE_CA_FILE" ]; then
                TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
              fi

              # Write a kubeconfig file for the CNI plugin.  Do this
              # to skip TLS verification for now.  We should eventually support
              # writing more complete kubeconfig files. This is only used
              # if the provided CNI network config references it.
              touch $WHEREABOUTS_KUBECONFIG
              chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
              cat > $WHEREABOUTS_KUBECONFIG <<EOF
            # Kubeconfig file for Multus CNI plugin.
            apiVersion: v1
            kind: Config
            clusters:
            - name: local
              cluster:
                server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
                $TLS_CFG
            users:
            - name: whereabouts
              user:
                token: "${SERVICEACCOUNT_TOKEN}"
            contexts:
            - name: whereabouts-context
              context:
                cluster: local
                user: whereabouts
                namespace: ${WHEREABOUTS_NAMESPACE}
            current-context: whereabouts-context
            EOF

            # Kubeconfig file for Whereabouts CNI plugin.
            cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
            {
              "datastore": "kubernetes",
              "kubernetes": {
                "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
              },
              "log_level": "debug"
            }
            EOF

            else
              warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
            fi

            # copy whereabouts to the cni bin dir
            # SKIPPED DUE TO FIPS COPY.
            # cp -f /whereabouts $CNI_BIN_DIR

            # ---------------------- end Generate a "kube-config".

            # Unless told otherwise, sleep forever.
            # This prevents Kubernetes from restarting the pod repeatedly.
            should_sleep=${SLEEP:-"true"}
            echo "Done configuring CNI.  Sleep=$should_sleep"
            while [ "$should_sleep" == "true"  ]; do
                sleep 1000000000000
            done
          env:
          - name: KUBERNETES_SERVICE_PORT
            value: "6443"
          - name: KUBERNETES_SERVICE_HOST
            value: api-int.sno.gw.lo
          - name: CNI_BIN_DIR
            value: /host/opt/cni/bin/
          - name: CNI_CONF_DIR
            value: /host/etc/cni/net.d
          - name: SLEEP
            value: "false"
          - name: WHEREABOUTS_NAMESPACE
            value: openshift-multus
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1d74f4833b6bb911b57cc08a170a7242733bb5d09ac9480399395a1970e21365
          imagePullPolicy: IfNotPresent
          name: whereabouts-cni
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cnibin
          - mountPath: /host/etc/cni/net.d
            name: system-cni-dir
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: multus
        serviceAccountName: multus
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/cni/net.d
            type: ""
          name: system-cni-dir
        - hostPath:
            path: /var/run/multus/cni/net.d
            type: ""
          name: multus-cni-dir
        - hostPath:
            path: /var/lib/cni/bin
            type: ""
          name: cnibin
        - hostPath:
            path: /etc/os-release
            type: File
          name: os-release
        - configMap:
            defaultMode: 484
            name: cni-copy-resources
          name: cni-binary-copy
        - hostPath:
            path: /etc/cni/tuning/
            type: DirectoryOrCreate
          name: tuning-conf-dir
        - configMap:
            defaultMode: 484
            name: default-cni-sysctl-allowlist
          name: cni-sysctl-allowlist
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemonset launches the network metrics daemon on each node
      networkoperator.openshift.io/non-critical: ""
      release.openshift.io/version: 4.12.2
    creationTimestamp: "2023-05-02T12:26:04Z"
    generation: 1
    labels:
      networkoperator.openshift.io/generates-operator-status: stand-alone
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:kubernetes.io/description: {}
            f:networkoperator.openshift.io/non-critical: {}
            f:release.openshift.io/version: {}
          f:labels:
            f:networkoperator.openshift.io/generates-operator-status: {}
          f:ownerReferences:
            k:{"uid":"a74973fc-c074-41e2-8215-81c3454addea"}: {}
        f:spec:
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                f:target.workload.openshift.io/management: {}
              f:labels:
                f:app: {}
                f:component: {}
                f:openshift.io/component: {}
                f:type: {}
            f:spec:
              f:affinity:
                f:nodeAffinity:
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:name: {}
                  f:ports:
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    k:{"mountPath":"/etc/metrics"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"network-metrics-daemon"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    f:requests:
                      f:cpu: {}
                      f:memory: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:securityContext:
                f:runAsNonRoot: {}
                f:runAsUser: {}
              f:serviceAccountName: {}
              f:tolerations: {}
              f:volumes:
                k:{"name":"metrics-certs"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    f:secretName: {}
          f:updateStrategy:
            f:rollingUpdate:
              f:maxUnavailable: {}
            f:type: {}
      manager: cluster-network-operator/operconfig
      operation: Apply
      time: "2023-05-02T12:26:04Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-05-04T16:32:23Z"
    name: network-metrics-daemon
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: a74973fc-c074-41e2-8215-81c3454addea
    resourceVersion: "630858"
    uid: 71e9742e-9666-4099-9bd8-4292d6ae6268
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: network-metrics-daemon
    template:
      metadata:
        annotations:
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: network-metrics-daemon
          component: network
          openshift.io/component: network
          type: infra
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: network.operator.openshift.io/dpu-host
                  operator: DoesNotExist
                - key: network.operator.openshift.io/dpu
                  operator: DoesNotExist
        containers:
        - args:
          - --node-name
          - $(NODE_NAME)
          command:
          - /usr/bin/network-metrics
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:41709e49c29b2764beb118cc25216916be6f8db716ed51886b8191ea695d94e0
          imagePullPolicy: IfNotPresent
          name: network-metrics-daemon
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --logtostderr
          - --secure-listen-address=:8443
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
          - --upstream=http://127.0.0.1:9091/
          - --tls-private-key-file=/etc/metrics/tls.key
          - --tls-cert-file=/etc/metrics/tls.crt
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c28f27a3a10df13e5e8c074e8734683a6603ebaccd9d67e2095070fb6859b1d6
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/metrics
            name: metrics-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: metrics-daemon-sa
        serviceAccountName: metrics-daemon-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - name: metrics-certs
          secret:
            defaultMode: 420
            secretName: metrics-daemon-secret
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 33%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
kind: DaemonSetList
metadata:
  resourceVersion: "684659"
