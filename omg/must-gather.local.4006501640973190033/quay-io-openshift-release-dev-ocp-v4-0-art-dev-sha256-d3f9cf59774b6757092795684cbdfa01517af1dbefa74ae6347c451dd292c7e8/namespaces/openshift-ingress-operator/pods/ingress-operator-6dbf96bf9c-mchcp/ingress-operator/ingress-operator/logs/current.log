2023-05-04T16:34:32.978258708Z 2023-05-04T16:34:32.977Z	INFO	operator.main	ingress-operator/start.go:64	using operator namespace	{"namespace": "openshift-ingress-operator"}
2023-05-04T16:34:34.028610690Z I0504 16:34:34.028563       1 request.go:682] Waited for 1.041021331s due to client-side throttling, not priority and fairness, request: GET:https://172.30.0.1:443/apis/k8s.cni.cncf.io/v1?timeout=32s
2023-05-04T16:34:35.333611370Z 2023-05-04T16:34:35.333Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for canary_controller
2023-05-04T16:34:35.333611370Z 2023-05-04T16:34:35.333Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for ingress_controller
2023-05-04T16:34:35.333643641Z 2023-05-04T16:34:35.333Z	INFO	operator.main	ingress-operator/start.go:64	registering Prometheus metrics for route_metrics_controller
2023-05-04T16:34:35.333713332Z 2023-05-04T16:34:35.333Z	INFO	operator.main	ingress-operator/start.go:64	watching file	{"filename": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"}
2023-05-04T16:34:35.333841342Z 2023-05-04T16:34:35.333Z	INFO	operator.init	runtime/asm_amd64.s:1594	starting metrics listener	{"addr": "127.0.0.1:60000"}
2023-05-04T16:34:37.687122375Z 2023-05-04T16:34:37.687Z	INFO	operator.init.controller-runtime.metrics	manager/manager.go:391	Metrics server is starting to listen	{"addr": ":8080"}
2023-05-04T16:34:37.688028125Z I0504 16:34:37.687958       1 base_controller.go:67] Waiting for caches to sync for spread-default-router-pods
2023-05-04T16:34:37.788887533Z I0504 16:34:37.788848       1 base_controller.go:73] Caches are synced for spread-default-router-pods 
2023-05-04T16:34:37.788887533Z I0504 16:34:37.788868       1 base_controller.go:110] Starting #1 worker of spread-default-router-pods controller ...
2023-05-04T16:34:40.049516593Z 2023-05-04T16:34:40.049Z	INFO	operator.init	runtime/asm_amd64.s:1594	Starting server	{"path": "/metrics", "kind": "metrics", "addr": "[::]:8080"}
2023-05-04T16:34:40.150869707Z 2023-05-04T16:34:40.150Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.150929269Z 2023-05-04T16:34:40.150Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Deployment"}
2023-05-04T16:34:40.150954817Z 2023-05-04T16:34:40.150Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Service"}
2023-05-04T16:34:40.150991356Z 2023-05-04T16:34:40.150Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Pod"}
2023-05-04T16:34:40.151021272Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.DNS"}
2023-05-04T16:34:40.151045387Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.DNSRecord"}
2023-05-04T16:34:40.151067909Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingress_controller", "source": "kind source: *v1.Ingress"}
2023-05-04T16:34:40.151088237Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "ingress_controller"}
2023-05-04T16:34:40.151318730Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "status_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.151348806Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "status_controller", "source": "kind source: *v1.ClusterOperator"}
2023-05-04T16:34:40.151387780Z 2023-05-04T16:34:40.151Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "status_controller"}
2023-05-04T16:34:40.152295243Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "kind source: *v1.Ingress"}
2023-05-04T16:34:40.152443421Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "&{{%!s(*v1.Role=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} []}) %!s(*cache.multiNamespaceCache=&{map[openshift-config:0xc0000162e0 openshift-config-managed:0xc0000162c0 openshift-ingress:0xc000016280 openshift-ingress-canary:0xc0000162a0 openshift-ingress-operator:0xc0000161e8] 0xc0002d4f50 0xc0009d61e0 0xc0000161d8}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-05-04T16:34:40.152485159Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "configurable_route_controller", "source": "&{{%!s(*v1.RoleBinding=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} [] {  }}) %!s(*cache.multiNamespaceCache=&{map[openshift-config:0xc0000162e0 openshift-config-managed:0xc0000162c0 openshift-ingress:0xc000016280 openshift-ingress-canary:0xc0000162a0 openshift-ingress-operator:0xc0000161e8] 0xc0002d4f50 0xc0009d61e0 0xc0000161d8}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-05-04T16:34:40.152511609Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "configurable_route_controller"}
2023-05-04T16:34:40.152675737Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.152703780Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-05-04T16:34:40.152727183Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "error_page_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-05-04T16:34:40.152747702Z 2023-05-04T16:34:40.152Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "error_page_configmap_controller"}
2023-05-04T16:34:40.154354858Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.154405964Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "certificate_controller"}
2023-05-04T16:34:40.154539976Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.154567638Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-05-04T16:34:40.154590661Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "clientca_configmap_controller", "source": "kind source: *v1.ConfigMap"}
2023-05-04T16:34:40.154611470Z 2023-05-04T16:34:40.154Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "clientca_configmap_controller"}
2023-05-04T16:34:40.155253625Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_publisher_controller", "source": "informer source: 0xc000017960"}
2023-05-04T16:34:40.155345297Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "certificate_publisher_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.155370625Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "certificate_publisher_controller"}
2023-05-04T16:34:40.155498585Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.DNSRecord"}
2023-05-04T16:34:40.155526948Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.DNS"}
2023-05-04T16:34:40.155551434Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.Infrastructure"}
2023-05-04T16:34:40.155574337Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "dns_controller", "source": "kind source: *v1.Secret"}
2023-05-04T16:34:40.155597160Z 2023-05-04T16:34:40.155Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "dns_controller"}
2023-05-04T16:34:40.156638184Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "informer source: 0xc000120df8"}
2023-05-04T16:34:40.156727802Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "informer source: 0xc000120df8"}
2023-05-04T16:34:40.156799306Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "crl", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.156822961Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "crl"}
2023-05-04T16:34:40.156944819Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "canary_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.156982901Z 2023-05-04T16:34:40.156Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "canary_controller", "source": "kind source: *v1.Route"}
2023-05-04T16:34:40.157654050Z 2023-05-04T16:34:40.157Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "canary_controller"}
2023-05-04T16:34:40.158948620Z 2023-05-04T16:34:40.158Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingressclass_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.159020495Z 2023-05-04T16:34:40.159Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "ingressclass_controller", "source": "kind source: *v1.IngressClass"}
2023-05-04T16:34:40.159043157Z 2023-05-04T16:34:40.159Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "ingressclass_controller"}
2023-05-04T16:34:40.162704229Z 2023-05-04T16:34:40.162Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "route_metrics_controller", "source": "kind source: *v1.IngressController"}
2023-05-04T16:34:40.162775383Z 2023-05-04T16:34:40.162Z	INFO	operator.init	controller/controller.go:241	Starting EventSource	{"controller": "route_metrics_controller", "source": "&{{%!s(*v1.Route=&{{ } {      0 {{0 0 <nil>}} <nil> <nil> map[] map[] [] [] []} {   {  <nil>} [] <nil> <nil> } {[]}}) %!s(*cache.informerCache=&{0xc000154ae0}) %!s(chan error=<nil>) %!s(func()=<nil>)}}"}
2023-05-04T16:34:40.162812502Z 2023-05-04T16:34:40.162Z	INFO	operator.init	controller/controller.go:241	Starting Controller	{"controller": "route_metrics_controller"}
2023-05-04T16:34:40.252829170Z 2023-05-04T16:34:40.252Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default", "related": ""}
2023-05-04T16:34:40.253539453Z 2023-05-04T16:34:40.253Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default", "related": ""}
2023-05-04T16:34:40.257762379Z 2023-05-04T16:34:40.257Z	INFO	operator.certificate_publisher_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.265046781Z 2023-05-04T16:34:40.263Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266898376Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266898376Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266922892Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266922892Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266922892Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266922892Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.266931268Z 2023-05-04T16:34:40.266Z	INFO	operator.route_metrics_controller	handler/enqueue_mapped.go:80	queueing ingresscontroller	{"name": "default"}
2023-05-04T16:34:40.357529176Z 2023-05-04T16:34:40.357Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "crl", "worker count": 1}
2023-05-04T16:34:40.357585071Z 2023-05-04T16:34:40.357Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "certificate_publisher_controller", "worker count": 1}
2023-05-04T16:34:40.357692442Z 2023-05-04T16:34:40.357Z	INFO	operator.certificate_publisher_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.358145112Z 2023-05-04T16:34:40.358Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "certificate_controller", "worker count": 1}
2023-05-04T16:34:40.358191689Z 2023-05-04T16:34:40.358Z	INFO	operator.certificate_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.363809072Z 2023-05-04T16:34:40.363Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "route_metrics_controller", "worker count": 1}
2023-05-04T16:34:40.363884905Z 2023-05-04T16:34:40.363Z	INFO	operator.route_metrics_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.559997228Z 2023-05-04T16:34:40.559Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "status_controller", "worker count": 1}
2023-05-04T16:34:40.560044647Z 2023-05-04T16:34:40.560Z	INFO	operator.status_controller	controller/controller.go:121	Reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.565755295Z 2023-05-04T16:34:40.565Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "ingressclass_controller", "worker count": 1}
2023-05-04T16:34:40.565787095Z 2023-05-04T16:34:40.565Z	INFO	operator.ingressclass_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.655422968Z 2023-05-04T16:34:40.655Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingress	{"name": "default", "related": ""}
2023-05-04T16:34:40.655460438Z 2023-05-04T16:34:40.655Z	INFO	operator.ingress_controller	handler/enqueue_mapped.go:80	queueing ingress	{"name": "default", "related": ""}
2023-05-04T16:34:40.655569493Z 2023-05-04T16:34:40.655Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "ingress_controller", "worker count": 1}
2023-05-04T16:34:40.655633273Z 2023-05-04T16:34:40.655Z	INFO	operator.ingress_controller	controller/controller.go:121	reconciling	{"request": "openshift-ingress-operator/default"}
2023-05-04T16:34:40.661102678Z 2023-05-04T16:34:40.661Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "configurable_route_controller", "worker count": 1}
2023-05-04T16:34:40.661247249Z 2023-05-04T16:34:40.661Z	INFO	operator.configurable_route_controller	controller/controller.go:121	reconciling	{"request": "/cluster"}
2023-05-04T16:34:40.661464036Z 2023-05-04T16:34:40.661Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "error_page_configmap_controller", "worker count": 1}
2023-05-04T16:34:40.661487500Z 2023-05-04T16:34:40.661Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "clientca_configmap_controller", "worker count": 1}
2023-05-04T16:34:40.661534919Z 2023-05-04T16:34:40.661Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "canary_controller", "worker count": 1}
2023-05-04T16:34:40.663561743Z 2023-05-04T16:34:40.662Z	INFO	operator.init	controller/controller.go:241	Starting workers	{"controller": "dns_controller", "worker count": 1}
2023-05-04T16:34:40.777351229Z 2023-05-04T16:34:40.777Z	INFO	operator.ingress_controller	ingress/deployment.go:131	updated router deployment	{"namespace": "openshift-ingress", "name": "router-default", "diff": "  &v1.Deployment{\n  \tTypeMeta:   {},\n  \tObjectMeta: {Name: \"router-default\", Namespace: \"openshift-ingress\", UID: \"742e1977-ae7e-4547-b347-d895fd433f13\", ResourceVersion: \"632234\", ...},\n  \tSpec: v1.DeploymentSpec{\n  \t\tReplicas: &1,\n  \t\tSelector: &{MatchLabels: {\"ingresscontroller.operator.openshift.io/deployment-ingresscontroller\": \"default\"}},\n  \t\tTemplate: v1.PodTemplateSpec{\n  \t\t\tObjectMeta: {Labels: {\"ingresscontroller.operator.openshift.io/deployment-ingresscontroller\": \"default\", \"ingresscontroller.operator.openshift.io/hash\": \"6854c4f8dc\"}, Annotations: {\"target.workload.openshift.io/management\": `{\"effect\": \"PreferredDuringScheduling\"}`, \"unsupported.do-not-use.openshift.io/override-liveness-grace-period-seconds\": \"10\"}},\n  \t\t\tSpec: v1.PodSpec{\n  \t\t\t\tVolumes: []v1.Volume{\n  \t\t\t\t\t{Name: \"default-certificate\", VolumeSource: {Secret: &{SecretName: \"router-certs-default\", DefaultMode: &420}}},\n  \t\t\t\t\t{\n  \t\t\t\t\t\tName: \"service-ca-bundle\",\n  \t\t\t\t\t\tVolumeSource: v1.VolumeSource{\n  \t\t\t\t\t\t\t... // 16 identical fields\n  \t\t\t\t\t\t\tFC:        nil,\n  \t\t\t\t\t\t\tAzureFile: nil,\n  \t\t\t\t\t\t\tConfigMap: &v1.ConfigMapVolumeSource{\n  \t\t\t\t\t\t\t\tLocalObjectReference: {Name: \"service-ca-bundle\"},\n  \t\t\t\t\t\t\t\tItems:                {{Key: \"service-ca.crt\", Path: \"service-ca.crt\"}},\n- \t\t\t\t\t\t\t\tDefaultMode:          &420,\n+ \t\t\t\t\t\t\t\tDefaultMode:          nil,\n  \t\t\t\t\t\t\t\tOptional:             &false,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tVsphereVolume: nil,\n  \t\t\t\t\t\t\tQuobyte:       nil,\n  \t\t\t\t\t\t\t... // 8 identical fields\n  \t\t\t\t\t\t},\n  \t\t\t\t\t},\n  \t\t\t\t\t{\n  \t\t\t\t\t\tName: \"stats-auth\",\n  \t\t\t\t\t\tVolumeSource: v1.VolumeSource{\n  \t\t\t\t\t\t\t... // 3 identical fields\n  \t\t\t\t\t\t\tAWSElasticBlockStore: nil,\n  \t\t\t\t\t\t\tGitRepo:              nil,\n  \t\t\t\t\t\t\tSecret: &v1.SecretVolumeSource{\n  \t\t\t\t\t\t\t\tSecretName:  \"router-stats-default\",\n  \t\t\t\t\t\t\t\tItems:       nil,\n- \t\t\t\t\t\t\t\tDefaultMode: &420,\n+ \t\t\t\t\t\t\t\tDefaultMode: nil,\n  \t\t\t\t\t\t\t\tOptional:    nil,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tNFS:   nil,\n  \t\t\t\t\t\t\tISCSI: nil,\n  \t\t\t\t\t\t\t... // 21 identical fields\n  \t\t\t\t\t\t},\n  \t\t\t\t\t},\n  \t\t\t\t\t{\n  \t\t\t\t\t\tName: \"metrics-certs\",\n  \t\t\t\t\t\tVolumeSource: v1.VolumeSource{\n  \t\t\t\t\t\t\t... // 3 identical fields\n  \t\t\t\t\t\t\tAWSElasticBlockStore: nil,\n  \t\t\t\t\t\t\tGitRepo:              nil,\n  \t\t\t\t\t\t\tSecret: &v1.SecretVolumeSource{\n  \t\t\t\t\t\t\t\tSecretName:  \"router-metrics-certs-default\",\n  \t\t\t\t\t\t\t\tItems:       nil,\n- \t\t\t\t\t\t\t\tDefaultMode: &420,\n+ \t\t\t\t\t\t\t\tDefaultMode: nil,\n  \t\t\t\t\t\t\t\tOptional:    nil,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tNFS:   nil,\n  \t\t\t\t\t\t\tISCSI: nil,\n  \t\t\t\t\t\t\t... // 21 identical fields\n  \t\t\t\t\t\t},\n  \t\t\t\t\t},\n  \t\t\t\t},\n  \t\t\t\tInitContainers: nil,\n  \t\t\t\tContainers: []v1.Container{\n  \t\t\t\t\t{\n  \t\t\t\t\t\t... // 3 identical fields\n  \t\t\t\t\t\tArgs:       nil,\n  \t\t\t\t\t\tWorkingDir: \"\",\n  \t\t\t\t\t\tPorts: []v1.ContainerPort{\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\tName:          \"http\",\n- \t\t\t\t\t\t\t\tHostPort:      80,\n+ \t\t\t\t\t\t\t\tHostPort:      0,\n  \t\t\t\t\t\t\t\tContainerPort: 80,\n  \t\t\t\t\t\t\t\tProtocol:      \"TCP\",\n  \t\t\t\t\t\t\t\tHostIP:        \"\",\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\tName:          \"https\",\n- \t\t\t\t\t\t\t\tHostPort:      443,\n+ \t\t\t\t\t\t\t\tHostPort:      0,\n  \t\t\t\t\t\t\t\tContainerPort: 443,\n  \t\t\t\t\t\t\t\tProtocol:      \"TCP\",\n  \t\t\t\t\t\t\t\tHostIP:        \"\",\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\tName:          \"metrics\",\n- \t\t\t\t\t\t\t\tHostPort:      1936,\n+ \t\t\t\t\t\t\t\tHostPort:      0,\n  \t\t\t\t\t\t\t\tContainerPort: 1936,\n  \t\t\t\t\t\t\t\tProtocol:      \"TCP\",\n  \t\t\t\t\t\t\t\tHostIP:        \"\",\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t},\n  \t\t\t\t\t\tEnvFrom:       nil,\n  \t\t\t\t\t\tEnv:           {{Name: \"DEFAULT_CERTIFICATE_DIR\", Value: \"/etc/pki/tls/private\"}, {Name: \"DEFAULT_DESTINATION_CA_PATH\", Value: \"/var/run/configmaps/service-ca/service-ca.crt\"}, {Name: \"RELOAD_INTERVAL\", Value: \"5s\"}, {Name: \"ROUTER_ALLOW_WILDCARD_ROUTES\", Value: \"false\"}, ...},\n  \t\t\t\t\t\tResources:     {Requests: {s\"cpu\": {i: {...}, s: \"100m\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, Format: \"BinarySI\"}}},\n  \t\t\t\t\t\tVolumeMounts:  {{Name: \"default-certificate\", ReadOnly: true, MountPath: \"/etc/pki/tls/private\"}, {Name: \"service-ca-bundle\", ReadOnly: true, MountPath: \"/var/run/configmaps/service-ca\"}, {Name: \"stats-auth\", ReadOnly: true, MountPath: \"/var/lib/haproxy/conf/metrics-auth\"}, {Name: \"metrics-certs\", ReadOnly: true, MountPath: \"/etc/pki/tls/metrics-certs\"}},\n  \t\t\t\t\t\tVolumeDevices: nil,\n  \t\t\t\t\t\tLivenessProbe: &v1.Probe{\n  \t\t\t\t\t\t\tProbeHandler: v1.ProbeHandler{\n  \t\t\t\t\t\t\t\tExec: nil,\n  \t\t\t\t\t\t\t\tHTTPGet: &v1.HTTPGetAction{\n  \t\t\t\t\t\t\t\t\tPath:        \"/healthz\",\n  \t\t\t\t\t\t\t\t\tPort:        {IntVal: 1936},\n  \t\t\t\t\t\t\t\t\tHost:        \"localhost\",\n- \t\t\t\t\t\t\t\t\tScheme:      \"HTTP\",\n+ \t\t\t\t\t\t\t\t\tScheme:      \"\",\n  \t\t\t\t\t\t\t\t\tHTTPHeaders: nil,\n  \t\t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t\tTCPSocket: nil,\n  \t\t\t\t\t\t\t\tGRPC:      nil,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tInitialDelaySeconds:           0,\n  \t\t\t\t\t\t\tTimeoutSeconds:                1,\n- \t\t\t\t\t\t\tPeriodSeconds:                 10,\n+ \t\t\t\t\t\t\tPeriodSeconds:                 0,\n- \t\t\t\t\t\t\tSuccessThreshold:              1,\n+ \t\t\t\t\t\t\tSuccessThreshold:              0,\n- \t\t\t\t\t\t\tFailureThreshold:              3,\n+ \t\t\t\t\t\t\tFailureThreshold:              0,\n  \t\t\t\t\t\t\tTerminationGracePeriodSeconds: nil,\n  \t\t\t\t\t\t},\n  \t\t\t\t\t\tReadinessProbe: &v1.Probe{\n  \t\t\t\t\t\t\tProbeHandler: v1.ProbeHandler{\n  \t\t\t\t\t\t\t\tExec: nil,\n  \t\t\t\t\t\t\t\tHTTPGet: &v1.HTTPGetAction{\n  \t\t\t\t\t\t\t\t\tPath:        \"/healthz/ready\",\n  \t\t\t\t\t\t\t\t\tPort:        {IntVal: 1936},\n  \t\t\t\t\t\t\t\t\tHost:        \"localhost\",\n- \t\t\t\t\t\t\t\t\tScheme:      \"HTTP\",\n+ \t\t\t\t\t\t\t\t\tScheme:      \"\",\n  \t\t\t\t\t\t\t\t\tHTTPHeaders: nil,\n  \t\t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t\tTCPSocket: nil,\n  \t\t\t\t\t\t\t\tGRPC:      nil,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tInitialDelaySeconds:           0,\n  \t\t\t\t\t\t\tTimeoutSeconds:                1,\n- \t\t\t\t\t\t\tPeriodSeconds:                 10,\n+ \t\t\t\t\t\t\tPeriodSeconds:                 0,\n- \t\t\t\t\t\t\tSuccessThreshold:              1,\n+ \t\t\t\t\t\t\tSuccessThreshold:              0,\n- \t\t\t\t\t\t\tFailureThreshold:              3,\n+ \t\t\t\t\t\t\tFailureThreshold:              0,\n  \t\t\t\t\t\t\tTerminationGracePeriodSeconds: nil,\n  \t\t\t\t\t\t},\n  \t\t\t\t\t\tStartupProbe: &v1.Probe{\n  \t\t\t\t\t\t\tProbeHandler: v1.ProbeHandler{\n  \t\t\t\t\t\t\t\tExec: nil,\n  \t\t\t\t\t\t\t\tHTTPGet: &v1.HTTPGetAction{\n  \t\t\t\t\t\t\t\t\tPath:        \"/healthz/ready\",\n  \t\t\t\t\t\t\t\t\tPort:        {IntVal: 1936},\n  \t\t\t\t\t\t\t\t\tHost:        \"localhost\",\n- \t\t\t\t\t\t\t\t\tScheme:      \"HTTP\",\n+ \t\t\t\t\t\t\t\t\tScheme:      \"\",\n  \t\t\t\t\t\t\t\t\tHTTPHeaders: nil,\n  \t\t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t\tTCPSocket: nil,\n  \t\t\t\t\t\t\t\tGRPC:      nil,\n  \t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\tInitialDelaySeconds:           0,\n  \t\t\t\t\t\t\tTimeoutSeconds:                1,\n  \t\t\t\t\t\t\tPeriodSeconds:                 1,\n- \t\t\t\t\t\t\tSuccessThreshold:              1,\n+ \t\t\t\t\t\t\tSuccessThreshold:              0,\n  \t\t\t\t\t\t\tFailureThreshold:              120,\n  \t\t\t\t\t\t\tTerminationGracePeriodSeconds: nil,\n  \t\t\t\t\t\t},\n  \t\t\t\t\t\tLifecycle:              nil,\n  \t\t\t\t\t\tTerminationMessagePath: \"/dev/termination-log\",\n  \t\t\t\t\t\t... // 6 identical fields\n  \t\t\t\t\t},\n  \t\t\t\t},\n  \t\t\t\tEphemeralContainers: nil,\n  \t\t\t\tRestartPolicy:       \"Always\",\n  \t\t\t\t... // 32 identical fields\n  \t\t\t},\n  \t\t},\n  \t\tStrategy:        {Type: \"RollingUpdate\", RollingUpdate: &{MaxUnavailable: &{Type: 1, StrVal: \"25%\"}, MaxSurge: &{}}},\n  \t\tMinReadySeconds: 30,\n  \t\t... // 3 identical fields\n  \t},\n  \tStatus: {ObservedGeneration: 1, Replicas: 1, UpdatedReplicas: 1, ReadyReplicas: 1, ...},\n  }\n"}
