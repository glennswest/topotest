---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "lvm.topolvm.io/v1alpha1",
            "kind": "LVMCluster",
            "metadata": {
              "name": "my-lvmcluster"
            },
            "spec": {
              "storage": {
                "deviceClasses": [
                  {
                    "name": "vg1",
                    "thinPoolConfig": {
                      "name": "thin-pool-1",
                      "overprovisionRatio": 10,
                      "sizePercent": 90
                    }
                  }
                ]
              }
            }
          }
        ]
      capabilities: Basic Install
      categories: Storage
      containerImage: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      description: Logical volume manager storage provides dynamically provisioned
        local storage for container workloads
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.212/23"],"mac_address":"0a:58:0a:80:01:d4","gateway_ips":["10.128.0.1"],"ip_address":"10.128.1.212/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.212"
            ],
            "mac": "0a:58:0a:80:01:d4",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.212"
            ],
            "mac": "0a:58:0a:80:01:d4",
            "default": true,
            "dns": {}
        }]
      olm.operatorGroup: openshift-storage-n7cjq
      olm.operatorNamespace: openshift-storage
      olm.skipRange: '>=4.2.0 <4.12.1'
      olm.targetNamespaces: openshift-storage
      olmcahash: e80be10ab4652e503ff00d686f44c9a8244c0582f7ade09c1165e681c995ad92
      openshift.io/scc: restricted-v2
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/initialization-resource: |-
        {
            "apiVersion": "lvm.topolvm.io/v1alpha1",
            "kind": "LVMCluster",
            "metadata": {
              "name": "test-lvmcluster"
            },
            "spec": {
              "storage": {
                "deviceClasses": [
                  {
                    "name": "vg1",
                    "thinPoolConfig": {
                      "name": "thin-pool-1",
                      "overprovisionRatio": 10,
                      "sizePercent": 90
                    }
                  }
                ]
              }
            }
          }
      operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMCluster","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMVolumeGroup","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMVolumeGroupNodeStatus","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"topolvm.io","kind":"LogicalVolume","version":"v1"}},{"type":"olm.package","value":{"packageName":"lvms-operator","version":"4.12.1"}}]}'
      operatorframework.io/suggested-namespace: openshift-storage
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/builder: operator-sdk-v1.23.0
      operators.operatorframework.io/internal-objects: '["logicalvolumes.topolvm.io",
        "lvmvolumegroups.lvm.topolvm.io", "lvmvolumegroupnodestatuses.lvm.topolvm.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/red-hat-storage/lvm-operator
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-04T14:35:15Z"
    generateName: lvms-operator-65cb4bdf95-
    labels:
      app.kubernetes.io/component: lvms-operator
      app.kubernetes.io/name: lvms-operator
      app.kubernetes.io/part-of: lvms-provisioner
      exporter: lvms-operator
      pod-template-hash: 65cb4bdf95
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alm-examples: {}
            f:capabilities: {}
            f:categories: {}
            f:containerImage: {}
            f:description: {}
            f:olm.operatorGroup: {}
            f:olm.operatorNamespace: {}
            f:olm.skipRange: {}
            f:olm.targetNamespaces: {}
            f:olmcahash: {}
            f:operatorframework.io/cluster-monitoring: {}
            f:operatorframework.io/initialization-resource: {}
            f:operatorframework.io/properties: {}
            f:operatorframework.io/suggested-namespace: {}
            f:operators.openshift.io/infrastructure-features: {}
            f:operators.operatorframework.io/builder: {}
            f:operators.operatorframework.io/internal-objects: {}
            f:operators.operatorframework.io/project_layout: {}
            f:repository: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:exporter: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d1805ee9-8dae-4fc8-a270-dbc8cab82626"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"OPERATOR_CONDITION_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/apiserver.local.config/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSI_LIVENESSPROBE_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_PROVISIONER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_REGISTRAR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_RESIZER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_SNAPSHOTTER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OPERATOR_CONDITION_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"TOPOLVM_CSI_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/apiserver.local.config/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"metricsexporter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OPERATOR_CONDITION_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/apiserver.local.config/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"apiservice-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"webhook-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-05-04T14:35:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: node
      operation: Update
      time: "2023-05-04T14:35:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-05-04T14:35:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.1.212"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-05-04T16:33:34Z"
    name: lvms-operator-65cb4bdf95-8qw5z
    namespace: openshift-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: lvms-operator-65cb4bdf95
      uid: d1805ee9-8dae-4fc8-a270-dbc8cab82626
    resourceVersion: "631779"
    uid: ac278bc0-a66d-4940-8429-a0023293be29
  spec:
    containers:
    - args:
      - --health-probe-bind-address=:8081
      - --metrics-bind-address=127.0.0.1:8080
      - --leader-elect
      command:
      - /manager
      env:
      - name: TOPOLVM_CSI_IMAGE
        value: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      - name: CSI_LIVENESSPROBE_IMAGE
        value: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
      - name: CSI_PROVISIONER_IMAGE
        value: registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:33617f49d30c6752e078e76bebcbf3f4384fb03286f2ef4d6ca9d2e6464ada43
      - name: CSI_REGISTRAR_IMAGE
        value: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:eeed76c41bf3d2262a4d177241a315bc476421b8471cbba1555991aac8ef83b0
      - name: CSI_RESIZER_IMAGE
        value: registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:b1f2103c4ddf702b2a135e68420af3e434c8b135735dbd33bf66afada0036976
      - name: CSI_SNAPSHOTTER_IMAGE
        value: registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:f1955371a5f88d8984af4445f43864dad8cc315e714f40984ebdf973185ade92
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_CONDITION_NAME
        value: lvms-operator.v4.12.1
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: webhook-cert
      - mountPath: /apiserver.local.config/certificates
        name: apiservice-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s97vh
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8443
      - --upstream=http://127.0.0.1:8080/
      - --logtostderr=true
      - --v=0
      env:
      - name: OPERATOR_CONDITION_NAME
        value: lvms-operator.v4.12.1
      image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:422e4fbe1ed81c79084f43a826dc0674510a7ff578e62b4ddda119ed3266d0b6
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /apiserver.local.config/certificates
        name: apiservice-cert
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: webhook-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s97vh
        readOnly: true
    - command:
      - /metricsexporter
      env:
      - name: OPERATOR_CONDITION_NAME
        value: lvms-operator.v4.12.1
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imagePullPolicy: IfNotPresent
      name: metricsexporter
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /apiserver.local.config/certificates
        name: apiservice-cert
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: webhook-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s97vh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: lvms-operator-dockercfg-2x9s2
    nodeName: node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000670000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c26,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: lvms-operator
    serviceAccountName: lvms-operator
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: lvms-operator-webhook-server-cert
    - name: apiservice-cert
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: apiserver.crt
        - key: tls.key
          path: apiserver.key
        secretName: lvms-operator-service-cert
    - name: webhook-cert
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        secretName: lvms-operator-service-cert
    - name: kube-api-access-s97vh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:35:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:35:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://50ef4cf107d13f404b1d9e265c107d1e47d678fc3b97bcb24cb991adc6f71394
      image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:422e4fbe1ed81c79084f43a826dc0674510a7ff578e62b4ddda119ed3266d0b6
      imageID: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20bfb196dcbb88f23fb90905eba48d6116371cf5c25791b7462caf093a5e34d7
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:32Z"
    - containerID: cri-o://f3b85c5f2b5a70a6f454d3056ed733f845bff05e903cc201a1a2ce1f8b97f012
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      lastState: {}
      name: manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:10Z"
    - containerID: cri-o://ac9a6c520c94069a66a2ec11a7ea7ae1f2fc606dd1697455c372c73e54ec315d
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      lastState: {}
      name: metricsexporter
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:33Z"
    hostIP: 192.168.1.126
    phase: Running
    podIP: 10.128.1.212
    podIPs:
    - ip: 10.128.1.212
    qosClass: Burstable
    startTime: "2023-05-04T14:35:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.216/23"],"mac_address":"0a:58:0a:80:01:d8","gateway_ips":["10.128.0.1"],"ip_address":"10.128.1.216/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.216"
            ],
            "mac": "0a:58:0a:80:01:d8",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.216"
            ],
            "mac": "0a:58:0a:80:01:d8",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-04T14:46:24Z"
    generateName: topolvm-controller-5496f5d4f4-
    labels:
      app.kubernetes.io/component: topolvm-controller
      app.kubernetes.io/managed-by: lvms-operator
      app.kubernetes.io/name: topolvm-csi-driver
      app.kubernetes.io/part-of: lvms-provisioner
      pod-template-hash: 5496f5d4f4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e18692a4-5db2-459d-a9ce-22b7e6d0c778"}: {}
        f:spec:
          f:containers:
            k:{"name":"csi-provisioner"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"csi-resizer"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"csi-snapshotter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"topolvm-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"self-signed-cert-generator"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"certs"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-05-04T14:46:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: node
      operation: Update
      time: "2023-05-04T14:46:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-05-04T14:46:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.1.216"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-05-04T16:34:16Z"
    name: topolvm-controller-5496f5d4f4-ll8f6
    namespace: openshift-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: topolvm-controller-5496f5d4f4
      uid: e18692a4-5db2-459d-a9ce-22b7e6d0c778
    resourceVersion: "632170"
    uid: 5513840e-b1cc-49be-a732-bdae9d465109
  spec:
    containers:
    - command:
      - /topolvm-controller
      - --cert-dir=/certs
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 3
      name: topolvm-controller
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 150Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: socket-dir
      - mountPath: /certs
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      - --enable-capacity
      - --capacity-ownerref-level=2
      - --capacity-poll-interval=30s
      - --feature-gates=Topology=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:33617f49d30c6752e078e76bebcbf3f4384fb03286f2ef4d6ca9d2e6464ada43
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      image: registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:b1f2103c4ddf702b2a135e68420af3e434c8b135735dbd33bf66afada0036976
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      image: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 50m
          memory: 50Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      image: registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:f1955371a5f88d8984af4445f43864dad8cc315e714f40984ebdf973185ade92
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 20m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: topolvm-controller-dockercfg-sxl7f
    initContainers:
    - command:
      - /usr/bin/bash
      - -c
      - openssl req -nodes -x509 -newkey rsa:4096 -subj '/DC=self_signed_certificate'
        -keyout /certs/tls.key -out /certs/tls.crt -days 3650
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imagePullPolicy: IfNotPresent
      name: self-signed-cert-generator
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000670000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkgsm
        readOnly: true
    nodeName: node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000670000
      seLinuxOptions:
        level: s0:c26,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: topolvm-controller
    serviceAccountName: topolvm-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - emptyDir: {}
      name: certs
    - name: kube-api-access-nkgsm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:34:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:34:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:46:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9897ba0e32a81decd5837ed7ee42accda9cb94e982007a264de93518957ba519
      image: registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:33617f49d30c6752e078e76bebcbf3f4384fb03286f2ef4d6ca9d2e6464ada43
      imageID: registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:33617f49d30c6752e078e76bebcbf3f4384fb03286f2ef4d6ca9d2e6464ada43
      lastState: {}
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:48Z"
    - containerID: cri-o://0cd4655154b2e0c6e4c6bd635f0d99f5a2c268b367a18092501c5dbccffd95b2
      image: registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:b1f2103c4ddf702b2a135e68420af3e434c8b135735dbd33bf66afada0036976
      imageID: registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:3e25cd6c4997ef7c71db31ef9f400e4442d99e42e43d784d6f798c658f15e25c
      lastState: {}
      name: csi-resizer
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:34:00Z"
    - containerID: cri-o://93da348e70dbbdd7e55e531d3abe9c0dc04e650e6384d0b3590d5283e2347727
      image: registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:f1955371a5f88d8984af4445f43864dad8cc315e714f40984ebdf973185ade92
      imageID: registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:48ba05c2d88ce8dbc2f0a08757cc7bc26d4045e7695e4d0a0ba9828160891acf
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:34:14Z"
    - containerID: cri-o://ef1e981f6af85c352715eca83112de6f01d3b59ec8f0abdb77629dea5e2e48c9
      image: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
      imageID: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:20fb28ec66f85711821ebfff9ed883b27b866541a1c4eb12aa864f29cbf28047
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:34:01Z"
    - containerID: cri-o://7b2f298afe91b7f306dc691d622e4616737c3e7bba5ff7728e478843c44ec846
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imageID: registry.redhat.io/lvms4/topolvm-rhel8@sha256:282aa91d125481977972d34d733c11a61830172847b7bf081c78d400c751c0e1
      lastState: {}
      name: topolvm-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:31Z"
    hostIP: 192.168.1.126
    initContainerStatuses:
    - containerID: cri-o://901aa43b95280b42100afff93826d2515b1f4099511ac9cadb620f790c95dcf4
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      lastState: {}
      name: self-signed-cert-generator
      ready: true
      restartCount: 1
      state:
        terminated:
          containerID: cri-o://901aa43b95280b42100afff93826d2515b1f4099511ac9cadb620f790c95dcf4
          exitCode: 0
          finishedAt: "2023-05-04T16:33:12Z"
          reason: Completed
          startedAt: "2023-05-04T16:33:10Z"
    phase: Running
    podIP: 10.128.1.216
    podIPs:
    - ip: 10.128.1.216
    qosClass: Burstable
    startTime: "2023-05-04T14:46:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.217/23"],"mac_address":"0a:58:0a:80:01:d9","gateway_ips":["10.128.0.1"],"ip_address":"10.128.1.217/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.217"
            ],
            "mac": "0a:58:0a:80:01:d9",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.217"
            ],
            "mac": "0a:58:0a:80:01:d9",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: lvms-topolvm-node
    creationTimestamp: "2023-05-04T14:46:25Z"
    generateName: topolvm-node-
    labels:
      app.kubernetes.io/component: topolvm-node
      app.kubernetes.io/managed-by: lvms-operator
      app.kubernetes.io/name: topolvm-csi-driver
      app.kubernetes.io/part-of: lvms-provisioner
      controller-revision-hash: 6b965784cf
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"911fce66-767c-40c3-8bed-1f853cca3056"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-registrar"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/registration"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"lvmd"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/lvmd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"topolvm-node"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/run/lvmd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"file-checker"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"csi-plugin-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lvmd-config-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lvmd-socket-dir"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"node-plugin-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"pod-volumes-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"registration-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-05-04T14:46:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: node
      operation: Update
      time: "2023-05-04T14:46:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-05-04T14:46:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.1.217"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-05-04T16:33:53Z"
    name: topolvm-node-7fjkf
    namespace: openshift-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: topolvm-node
      uid: 911fce66-767c-40c3-8bed-1f853cca3056
    resourceVersion: "631964"
    uid: 36d2b06d-73d9-44e2-a11a-e6d2f94f4d52
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node
    containers:
    - command:
      - /lvmd
      - --config=/etc/topolvm/lvmd.yaml
      - --container=true
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imagePullPolicy: IfNotPresent
      name: lvmd
      resources:
        limits:
          cpu: 200m
          memory: 150Mi
        requests:
          cpu: 150m
          memory: 100Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/lvmd
        name: lvmd-socket-dir
      - mountPath: /etc/topolvm
        name: lvmd-config-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dt792
        readOnly: true
    - command:
      - /topolvm-node
      - --lvmd-socket=/run/lvmd/lvmd.sock
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 3
      name: topolvm-node
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 200Mi
        requests:
          cpu: 50m
          memory: 150Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: node-plugin-dir
      - mountPath: /run/lvmd
        name: lvmd-socket-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pod-volumes-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: csi-plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dt792
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/topolvm.io/node/csi-topolvm.sock
      image: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:eeed76c41bf3d2262a4d177241a315bc476421b8471cbba1555991aac8ef83b0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/topolvm.io /registration/topolvm.io-reg.sock
      name: csi-registrar
      resources:
        limits:
          cpu: 30m
          memory: 50Mi
        requests:
          cpu: 20m
          memory: 30Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: node-plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dt792
        readOnly: true
    - args:
      - --csi-address=/run/topolvm/csi-topolvm.sock
      image: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 50m
          memory: 50Mi
        requests:
          cpu: 30m
          memory: 30Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/topolvm
        name: node-plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dt792
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    imagePullSecrets:
    - name: topolvm-node-dockercfg-gt78q
    initContainers:
    - command:
      - /usr/bin/bash
      - -c
      - until [ -f /etc/topolvm/lvmd.yaml ]; do echo waiting for lvmd config file;
        sleep 5; done
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imagePullPolicy: IfNotPresent
      name: file-checker
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/topolvm
        name: lvmd-config-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dt792
        readOnly: true
    nodeName: node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: topolvm-node
    serviceAccountName: topolvm-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/topolvm.io/node
        type: DirectoryOrCreate
      name: node-plugin-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: csi-plugin-dir
    - hostPath:
        path: /var/lib/kubelet/pods/
        type: DirectoryOrCreate
      name: pod-volumes-dir
    - hostPath:
        path: /etc/topolvm
        type: Directory
      name: lvmd-config-dir
    - emptyDir:
        medium: Memory
      name: lvmd-socket-dir
    - name: kube-api-access-dt792
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:47:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:46:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://518f392fe3edc74d98b652dd1ea7261ab0a9dfe9c00cce37f961247adcb903d0
      image: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:eeed76c41bf3d2262a4d177241a315bc476421b8471cbba1555991aac8ef83b0
      imageID: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:2609f5c0c8b106482b4876f59067252f352ea4aa1e590b7080a410fb581fd001
      lastState: {}
      name: csi-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:43Z"
    - containerID: cri-o://94cf5188632bfffee370c57eeac5eaedd3210eb3a309eb62ff25ef4762259d8a
      image: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
      imageID: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:20fb28ec66f85711821ebfff9ed883b27b866541a1c4eb12aa864f29cbf28047
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:52Z"
    - containerID: cri-o://bc5b5e1b9f0226ecee7a115c027b454e9e38c92f8847a05c6b3663e061757637
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imageID: registry.redhat.io/lvms4/topolvm-rhel8@sha256:282aa91d125481977972d34d733c11a61830172847b7bf081c78d400c751c0e1
      lastState: {}
      name: lvmd
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:31Z"
    - containerID: cri-o://f156d3eafa8bca4af2bb808515dee2b09a74462dd4c76c9e67d52babae8e3117
      image: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
      imageID: registry.redhat.io/lvms4/topolvm-rhel8@sha256:282aa91d125481977972d34d733c11a61830172847b7bf081c78d400c751c0e1
      lastState: {}
      name: topolvm-node
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:32Z"
    hostIP: 192.168.1.126
    initContainerStatuses:
    - containerID: cri-o://9e336c59c52719b862e5ffa70e60623e2383ed71ddb98ea88cced7d25c9606bf
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      lastState: {}
      name: file-checker
      ready: true
      restartCount: 1
      state:
        terminated:
          containerID: cri-o://9e336c59c52719b862e5ffa70e60623e2383ed71ddb98ea88cced7d25c9606bf
          exitCode: 0
          finishedAt: "2023-05-04T16:33:02Z"
          reason: Completed
          startedAt: "2023-05-04T16:33:02Z"
    phase: Running
    podIP: 10.128.1.217
    podIPs:
    - ip: 10.128.1.217
    qosClass: Burstable
    startTime: "2023-05-04T14:46:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.218/23"],"mac_address":"0a:58:0a:80:01:da","gateway_ips":["10.128.0.1"],"ip_address":"10.128.1.218/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.218"
            ],
            "mac": "0a:58:0a:80:01:da",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.1.218"
            ],
            "mac": "0a:58:0a:80:01:da",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: lvms-vgmanager
    creationTimestamp: "2023-05-04T14:46:25Z"
    generateName: vg-manager-
    labels:
      app.kubernetes.io/component: vg-manager
      app.kubernetes.io/managed-by: lvms-operator
      app.kubernetes.io/name: vg-manager
      app.kubernetes.io/part-of: lvms-provisioner
      controller-revision-hash: 6c7cbf4894
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7e92038e-bf1a-4788-83b9-eb2d3bcaa2be"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"vg-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/topolvm"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/udev"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"device-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lvmd-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-udev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-05-04T14:46:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: node
      operation: Update
      time: "2023-05-04T14:46:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-05-04T14:46:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.1.218"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-05-04T16:33:11Z"
    name: vg-manager-dq9h6
    namespace: openshift-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: vg-manager
      uid: 7e92038e-bf1a-4788-83b9-eb2d3bcaa2be
    resourceVersion: "631313"
    uid: 53ca4841-3ccb-4136-9027-a6def72931f4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node
    containers:
    - command:
      - /vgmanager
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imagePullPolicy: IfNotPresent
      name: vg-manager
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 30m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/topolvm
        mountPropagation: HostToContainer
        name: lvmd-conf
      - mountPath: /dev
        mountPropagation: HostToContainer
        name: device-dir
      - mountPath: /run/udev
        mountPropagation: HostToContainer
        name: run-udev
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxsw9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    imagePullSecrets:
    - name: vg-manager-dockercfg-58mf8
    nodeName: node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000670000
      seLinuxOptions:
        level: s0:c26,c10
    serviceAccount: vg-manager
    serviceAccountName: vg-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/topolvm
        type: DirectoryOrCreate
      name: lvmd-conf
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /run/udev
        type: ""
      name: run-udev
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - name: kube-api-access-vxsw9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:46:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:33:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T14:46:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f0a3bb0627830dffe87ed6211ad747508fcee883fa1fb44383388f0000553571
      image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
      lastState: {}
      name: vg-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:33:10Z"
    hostIP: 192.168.1.126
    phase: Running
    podIP: 10.128.1.218
    podIPs:
    - ip: 10.128.1.218
    qosClass: Burstable
    startTime: "2023-05-04T14:46:25Z"
kind: PodList
metadata:
  resourceVersion: "684671"
