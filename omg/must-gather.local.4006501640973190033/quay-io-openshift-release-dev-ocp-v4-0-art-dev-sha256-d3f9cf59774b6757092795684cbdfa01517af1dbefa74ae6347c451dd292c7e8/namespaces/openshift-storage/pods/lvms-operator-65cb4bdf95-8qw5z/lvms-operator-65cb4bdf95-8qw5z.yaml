---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "lvm.topolvm.io/v1alpha1",
          "kind": "LVMCluster",
          "metadata": {
            "name": "my-lvmcluster"
          },
          "spec": {
            "storage": {
              "deviceClasses": [
                {
                  "name": "vg1",
                  "thinPoolConfig": {
                    "name": "thin-pool-1",
                    "overprovisionRatio": 10,
                    "sizePercent": 90
                  }
                }
              ]
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Storage
    containerImage: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    description: Logical volume manager storage provides dynamically provisioned local
      storage for container workloads
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.1.212/23"],"mac_address":"0a:58:0a:80:01:d4","gateway_ips":["10.128.0.1"],"ip_address":"10.128.1.212/23","gateway_ip":"10.128.0.1"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.1.212"
          ],
          "mac": "0a:58:0a:80:01:d4",
          "default": true,
          "dns": {}
      }]
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.1.212"
          ],
          "mac": "0a:58:0a:80:01:d4",
          "default": true,
          "dns": {}
      }]
    olm.operatorGroup: openshift-storage-n7cjq
    olm.operatorNamespace: openshift-storage
    olm.skipRange: '>=4.2.0 <4.12.1'
    olm.targetNamespaces: openshift-storage
    olmcahash: e80be10ab4652e503ff00d686f44c9a8244c0582f7ade09c1165e681c995ad92
    openshift.io/scc: restricted-v2
    operatorframework.io/cluster-monitoring: "true"
    operatorframework.io/initialization-resource: |-
      {
          "apiVersion": "lvm.topolvm.io/v1alpha1",
          "kind": "LVMCluster",
          "metadata": {
            "name": "test-lvmcluster"
          },
          "spec": {
            "storage": {
              "deviceClasses": [
                {
                  "name": "vg1",
                  "thinPoolConfig": {
                    "name": "thin-pool-1",
                    "overprovisionRatio": 10,
                    "sizePercent": 90
                  }
                }
              ]
            }
          }
        }
    operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMCluster","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMVolumeGroup","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"lvm.topolvm.io","kind":"LVMVolumeGroupNodeStatus","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"topolvm.io","kind":"LogicalVolume","version":"v1"}},{"type":"olm.package","value":{"packageName":"lvms-operator","version":"4.12.1"}}]}'
    operatorframework.io/suggested-namespace: openshift-storage
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.23.0
    operators.operatorframework.io/internal-objects: '["logicalvolumes.topolvm.io",
      "lvmvolumegroups.lvm.topolvm.io", "lvmvolumegroupnodestatuses.lvm.topolvm.io"]'
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/red-hat-storage/lvm-operator
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-05-04T14:35:15Z"
  generateName: lvms-operator-65cb4bdf95-
  labels:
    app.kubernetes.io/component: lvms-operator
    app.kubernetes.io/name: lvms-operator
    app.kubernetes.io/part-of: lvms-provisioner
    exporter: lvms-operator
    pod-template-hash: 65cb4bdf95
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:alm-examples: {}
          f:capabilities: {}
          f:categories: {}
          f:containerImage: {}
          f:description: {}
          f:olm.operatorGroup: {}
          f:olm.operatorNamespace: {}
          f:olm.skipRange: {}
          f:olm.targetNamespaces: {}
          f:olmcahash: {}
          f:operatorframework.io/cluster-monitoring: {}
          f:operatorframework.io/initialization-resource: {}
          f:operatorframework.io/properties: {}
          f:operatorframework.io/suggested-namespace: {}
          f:operators.openshift.io/infrastructure-features: {}
          f:operators.operatorframework.io/builder: {}
          f:operators.operatorframework.io/internal-objects: {}
          f:operators.operatorframework.io/project_layout: {}
          f:repository: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:exporter: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"d1805ee9-8dae-4fc8-a270-dbc8cab82626"}: {}
      f:spec:
        f:containers:
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"manager"}:
            .: {}
            f:args: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CSI_LIVENESSPROBE_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CSI_PROVISIONER_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CSI_REGISTRAR_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CSI_RESIZER_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CSI_SNAPSHOTTER_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"TOPOLVM_CSI_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"metricsexporter"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"apiservice-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
          k:{"name":"cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"webhook-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-05-04T14:35:15Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: node
    operation: Update
    time: "2023-05-04T14:35:15Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
          f:k8s.v1.cni.cncf.io/networks-status: {}
    manager: multus
    operation: Update
    subresource: status
    time: "2023-05-04T14:35:16Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.128.1.212"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-05-04T16:33:34Z"
  name: lvms-operator-65cb4bdf95-8qw5z
  namespace: openshift-storage
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: lvms-operator-65cb4bdf95
    uid: d1805ee9-8dae-4fc8-a270-dbc8cab82626
  resourceVersion: "631779"
  uid: ac278bc0-a66d-4940-8429-a0023293be29
spec:
  containers:
  - args:
    - --health-probe-bind-address=:8081
    - --metrics-bind-address=127.0.0.1:8080
    - --leader-elect
    command:
    - /manager
    env:
    - name: TOPOLVM_CSI_IMAGE
      value: registry.redhat.io/lvms4/topolvm-rhel8@sha256:751044f29417b1a8db051c813e95316e489a73ccb4a8c7d18ab46a0f4d1c1a59
    - name: CSI_LIVENESSPROBE_IMAGE
      value: registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:d4228c6e797ec6b2d37e599c19c715b02f6cb955b2a7fb493c56844f4c75e687
    - name: CSI_PROVISIONER_IMAGE
      value: registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:33617f49d30c6752e078e76bebcbf3f4384fb03286f2ef4d6ca9d2e6464ada43
    - name: CSI_REGISTRAR_IMAGE
      value: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:eeed76c41bf3d2262a4d177241a315bc476421b8471cbba1555991aac8ef83b0
    - name: CSI_RESIZER_IMAGE
      value: registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:b1f2103c4ddf702b2a135e68420af3e434c8b135735dbd33bf66afada0036976
    - name: CSI_SNAPSHOTTER_IMAGE
      value: registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:f1955371a5f88d8984af4445f43864dad8cc315e714f40984ebdf973185ade92
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OPERATOR_CONDITION_NAME
      value: lvms-operator.v4.12.1
    image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8081
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 1
    name: manager
    ports:
    - containerPort: 9443
      name: webhook-server
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /readyz
        port: 8081
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000670000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s97vh
      readOnly: true
  - args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:8080/
    - --logtostderr=true
    - --v=0
    env:
    - name: OPERATOR_CONDITION_NAME
      value: lvms-operator.v4.12.1
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:422e4fbe1ed81c79084f43a826dc0674510a7ff578e62b4ddda119ed3266d0b6
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 8443
      name: https
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000670000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s97vh
      readOnly: true
  - command:
    - /metricsexporter
    env:
    - name: OPERATOR_CONDITION_NAME
      value: lvms-operator.v4.12.1
    image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    imagePullPolicy: IfNotPresent
    name: metricsexporter
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 30m
        memory: 30Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000670000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-s97vh
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: lvms-operator-dockercfg-2x9s2
  nodeName: node
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000670000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c26,c10
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: lvms-operator
  serviceAccountName: lvms-operator
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: cert
    secret:
      defaultMode: 420
      secretName: lvms-operator-webhook-server-cert
  - name: apiservice-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: apiserver.crt
      - key: tls.key
        path: apiserver.key
      secretName: lvms-operator-service-cert
  - name: webhook-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      secretName: lvms-operator-service-cert
  - name: kube-api-access-s97vh
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-05-04T14:35:15Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-05-04T16:33:34Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-05-04T16:33:34Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-05-04T14:35:15Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://50ef4cf107d13f404b1d9e265c107d1e47d678fc3b97bcb24cb991adc6f71394
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:422e4fbe1ed81c79084f43a826dc0674510a7ff578e62b4ddda119ed3266d0b6
    imageID: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20bfb196dcbb88f23fb90905eba48d6116371cf5c25791b7462caf093a5e34d7
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2023-05-04T16:33:32Z"
  - containerID: cri-o://f3b85c5f2b5a70a6f454d3056ed733f845bff05e903cc201a1a2ce1f8b97f012
    image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    lastState: {}
    name: manager
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2023-05-04T16:33:10Z"
  - containerID: cri-o://ac9a6c520c94069a66a2ec11a7ea7ae1f2fc606dd1697455c372c73e54ec315d
    image: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    imageID: registry.redhat.io/lvms4/lvms-rhel8-operator@sha256:80342a9216008b642e15bf8d79532c440b5e6e6e56b2576d8c24b473b0a81e6f
    lastState: {}
    name: metricsexporter
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2023-05-04T16:33:33Z"
  hostIP: 192.168.1.126
  phase: Running
  podIP: 10.128.1.212
  podIPs:
  - ip: 10.128.1.212
  qosClass: Burstable
  startTime: "2023-05-04T14:35:15Z"
