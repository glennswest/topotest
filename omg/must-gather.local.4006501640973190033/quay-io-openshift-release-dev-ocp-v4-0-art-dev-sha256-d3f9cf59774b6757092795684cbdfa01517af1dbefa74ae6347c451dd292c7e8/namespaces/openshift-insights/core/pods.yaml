---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.47/23"],"mac_address":"0a:58:0a:80:00:2f","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.47/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.47"
            ],
            "mac": "0a:58:0a:80:00:2f",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.47"
            ],
            "mac": "0a:58:0a:80:00:2f",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-05-02T12:37:31Z"
    generateName: insights-operator-847896d87d-
    labels:
      app: insights-operator
      pod-template-hash: 847896d87d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"35534f5b-20b1-40fb-bb68-3bd84d7c8c54"}: {}
        f:spec:
          f:containers:
            k:{"name":"insights-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/lib/insights-operator"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/service-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"service-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"snapshots"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-05-02T12:37:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
            f:k8s.v1.cni.cncf.io/networks-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2023-05-02T12:37:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: node
      operation: Update
      time: "2023-05-02T12:37:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.47"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-05-04T16:32:44Z"
    name: insights-operator-847896d87d-j5ms8
    namespace: openshift-insights
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: insights-operator-847896d87d
      uid: 35534f5b-20b1-40fb-bb68-3bd84d7c8c54
    resourceVersion: "631089"
    uid: caf47116-12a0-43d8-b136-dc7ce5c09aca
  spec:
    containers:
    - args:
      - start
      - -v=4
      - --config=/etc/insights-operator/server.yaml
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: RELEASE_VERSION
        value: 4.12.2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:aec165a1c80946b96c6ba401ff249e31554a3cce8ab2f996b9f6618dbe9bc84a
      imagePullPolicy: IfNotPresent
      name: insights-operator
      ports:
      - containerPort: 8443
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000250000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/lib/insights-operator
        name: snapshots
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/configmaps/service-ca-bundle
        name: service-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7s24
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node
    nodeSelector:
      beta.kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000250000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c16,c5
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: operator
    serviceAccountName: operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 900
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 900
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: snapshots
    - configMap:
        defaultMode: 420
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - configMap:
        defaultMode: 420
        name: service-ca-bundle
        optional: true
      name: service-ca-bundle
    - name: serving-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: openshift-insights-serving-cert
    - name: kube-api-access-t7s24
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-02T12:37:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:32:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T16:32:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-02T12:37:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4688e5a2924a7b4a1096a27eee9003ac3e5345b2a6a81c36b33006ec94371508
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:aec165a1c80946b96c6ba401ff249e31554a3cce8ab2f996b9f6618dbe9bc84a
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:aec165a1c80946b96c6ba401ff249e31554a3cce8ab2f996b9f6618dbe9bc84a
      lastState: {}
      name: insights-operator
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2023-05-04T16:32:44Z"
    hostIP: 192.168.1.126
    phase: Running
    podIP: 10.128.0.47
    podIPs:
    - ip: 10.128.0.47
    qosClass: Burstable
    startTime: "2023-05-02T12:37:31Z"
kind: PodList
metadata:
  resourceVersion: "684637"
