---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
    operatorframework.io/installed-alongside-97d33511a9099f2d: openshift-storage/lvms-operator.v4.12.1
  creationTimestamp: "2023-05-04T14:34:57Z"
  generation: 1
  labels:
    operators.coreos.com/lvms-operator.openshift-storage: ""
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:controller-gen.kubebuilder.io/version: {}
          f:operatorframework.io/installed-alongside-97d33511a9099f2d: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: catalog
    operation: Update
    time: "2023-05-04T14:34:57Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-apiserver
    operation: Update
    subresource: status
    time: "2023-05-04T14:34:58Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:operators.coreos.com/lvms-operator.openshift-storage: {}
    manager: olm
    operation: Update
    time: "2023-05-04T14:35:16Z"
  name: lvmvolumegroups.lvm.topolvm.io
  resourceVersion: "598953"
  uid: e53e284f-4464-4c36-afff-d3f87e9479b3
spec:
  conversion:
    strategy: None
  group: lvm.topolvm.io
  names:
    kind: LVMVolumeGroup
    listKind: LVMVolumeGroupList
    plural: lvmvolumegroups
    singular: lvmvolumegroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LVMVolumeGroup is the Schema for the lvmvolumegroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LVMVolumeGroupSpec defines the desired state of LVMVolumeGroup
            properties:
              deviceSelector:
                description: DeviceSelector is a set of rules that should match for
                  a device to be included in this TopoLVMCluster
                properties:
                  paths:
                    description: A list of device paths which would be chosen for
                      creating Volume Group. For example "/dev/disk/by-path/pci-0000:04:00.0-nvme-1"
                      We discourage using the device names as they can change over
                      node restarts.
                    items:
                      type: string
                    type: array
                type: object
              nodeSelector:
                description: NodeSelector chooses nodes
                properties:
                  nodeSelectorTerms:
                    description: Required. A list of node selector terms. The terms
                      are ORed.
                    items:
                      description: A null or empty node selector term matches no objects.
                        The requirements of them are ANDed. The TopologySelectorTerm
                        type implements a subset of the NodeSelectorTerm.
                      properties:
                        matchExpressions:
                          description: A list of node selector requirements by node's
                            labels.
                          items:
                            description: A node selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: Represents a key's relationship to a
                                  set of values. Valid operators are In, NotIn, Exists,
                                  DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. If the operator is Gt or Lt,
                                  the values array must have a single element, which
                                  will be interpreted as an integer. This array is
                                  replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchFields:
                          description: A list of node selector requirements by node's
                            fields.
                          items:
                            description: A node selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: Represents a key's relationship to a
                                  set of values. Valid operators are In, NotIn, Exists,
                                  DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. If the operator is Gt or Lt,
                                  the values array must have a single element, which
                                  will be interpreted as an integer. This array is
                                  replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - nodeSelectorTerms
                type: object
              thinPoolConfig:
                description: ThinPoolConfig contains configurations for the thin-pool
                properties:
                  name:
                    description: Name of the thin pool to be created
                    type: string
                  overprovisionRatio:
                    description: OverProvisionRatio is the factor by which additional
                      storage can be provisioned compared to the available storage
                      in the thin pool.
                    minimum: 2
                    type: integer
                  sizePercent:
                    default: 90
                    description: SizePercent represents percentage of remaining space
                      in the volume group that should be used for creating the thin
                      pool.
                    maximum: 90
                    minimum: 10
                    type: integer
                required:
                - name
                - overprovisionRatio
                type: object
            required:
            - thinPoolConfig
            type: object
          status:
            description: LVMVolumeGroupStatus defines the observed state of LVMVolumeGroup
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: LVMVolumeGroup
    listKind: LVMVolumeGroupList
    plural: lvmvolumegroups
    singular: lvmvolumegroup
  conditions:
  - lastTransitionTime: "2023-05-04T14:34:58Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2023-05-04T14:34:58Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1alpha1
